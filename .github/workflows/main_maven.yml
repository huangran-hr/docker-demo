# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2


    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Runs a single command using the runners shell
#     - name: package
#       run: mvn -B package --file pom.xml

    # Runs a set of commands using the runners shell
#     - name: Copy file
#       run: mkdir staging && cp target/*.jar staging
      
#     - uses: actions/upload-artifact@v1
#       with:
#         name: Package
#         path: staging

#     - name: get value
#       run: find . -name docker-demo.jar

#     - name: set mvn goal
#       run: mvn 

    - name: login docker hub
      run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}

    - name: Publish to Registry
      run: mvn clean package dockerfile:build dockerfile:push -Ddockerfile.tag=v0.0.1
      
#       uses: elgohr/Publish-Docker-Github-Action@v5
#       with:
#         name: huangran/hr
#         dockerfile: ./Dockerfile
#         buildargs: huangran/hr
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
#         #registry: index.docker.io
#         tag_names: 0.0.2
#         cache: true
#         snapshot: true
